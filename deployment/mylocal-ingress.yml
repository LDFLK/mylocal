apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/issue-temporary-certificate: "true"
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: balanced
    nginx.ingress.kubernetes.io/backend-protocol: http
    nginx.ingress.kubernetes.io/permanent-redirect-code: "301"
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: route
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
  name: mylocal-ingress
spec:
  rules:
    - host: mylocal.datafoundation.lk
      http:
        paths:
          - backend:
              service:
                name: mylocal
                port:
                  number: 80
            path: /
            pathType: Prefix
          - backend:
              service:
                name: gig-server
                port:
                  number: 4001
            path: /gig_server
            pathType: Prefix
          - backend:
              service:
                name: geo-server
                port:
                  number: 4002
            path: /geo_server
            pathType: Prefix
  tls:
    - hosts:
        - mylocal.datafoundation.lk
      secretName: mylocal-ing-1651760884